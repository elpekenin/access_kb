diff --git a/quantum/painter/qp_internal.c b/quantum/painter/qp_internal.c
index 0e81467e26..16e4e6f9af 100644
--- a/quantum/painter/qp_internal.c
+++ b/quantum/painter/qp_internal.c
@@ -17,6 +17,7 @@ enum {
                      + (GC9A01_NUM_DEVICES)  // GC9A01
                      + (SSD1351_NUM_DEVICES) // SSD1351
                      + (SH1106_NUM_DEVICES)  // SH1106
+                     + (IL91874_NUM_DEVICES) // IL91874
 };

 static painter_device_t qp_devices[QP_NUM_DEVICES] = {NULL};

diff --git a/quantum/painter/rules.mk b/quantum/painter/rules.mk
index 186765664f..4a2902c4c1 100644
--- a/quantum/painter/rules.mk
+++ b/quantum/painter/rules.mk
@@ -15,7 +15,8 @@ VALID_QUANTUM_PAINTER_DRIVERS := \
     gc9a01_spi \
     ssd1351_spi \
     sh1106_i2c \
-    sh1106_spi
+    sh1106_spi \
+    il91874_spi

 #-------------------------------------------------------------------------------

@@ -158,6 +159,19 @@ define handle_quantum_painter_driver
             $(DRIVER_PATH)/painter/oled_panel/qp_oled_panel.c \
             $(DRIVER_PATH)/painter/sh1106/qp_sh1106.c

+    else ifeq ($$(strip $$(CURRENT_PAINTER_DRIVER)),il91874_spi)
+        DEFERRED_EXEC_ENABLE := yes  # for timeout that prevents damaging screen
+        QUANTUM_PAINTER_NEEDS_SURFACE := yes
+        QUANTUM_PAINTER_NEEDS_COMMS_SPI := yes
+        QUANTUM_PAINTER_NEEDS_COMMS_SPI_DC_RESET := yes
+        OPT_DEFS += -DQUANTUM_PAINTER_IL91874_ENABLE -DQUANTUM_PAINTER_IL91874_SPI_ENABLE
+        COMMON_VPATH += \
+            $(DRIVER_PATH)/painter/eink_panel \
+            $(DRIVER_PATH)/painter/il91874
+        SRC += \
+            $(DRIVER_PATH)/painter/eink_panel/qp_eink_panel.c \
+            $(DRIVER_PATH)/painter/il91874/qp_il91874.c
+
     endif
 endef

diff --git a/quantum/painter/qp.h b/quantum/painter/qp.h
index e5e77268e1..b3e5950f86 100644
--- a/quantum/painter/qp.h
+++ b/quantum/painter/qp.h
@@ -510,6 +510,12 @@ int16_t qp_drawtext_recolor(painter_device_t device, uint16_t x, uint16_t y, pai
 #    define SH1106_NUM_DEVICES 0
 #endif // QUANTUM_PAINTER_SH1106_ENABLE
 
+#ifdef QUANTUM_PAINTER_IL91874_ENABLE
+#    include "qp_il91874.h"
+#else // QUANTUM_PAINTER_IL91874_ENABLE
+#    define IL91874_NUM_DEVICES 0
+#endif // QUANTUM_PAINTER_IL91874_ENABLE
+
 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 // Quantum Painter Extras
 
diff --git a/drivers/painter/generic/qp_surface_mono1bpp.c b/drivers/painter/generic/qp_surface_mono1bpp.c
index c66b56519d..6490db3b89 100644
--- a/drivers/painter/generic/qp_surface_mono1bpp.c
+++ b/drivers/painter/generic/qp_surface_mono1bpp.c
@@ -23,7 +23,7 @@ static inline void setpixel_mono1bpp(surface_painter_device_t *surface, uint16_t
     // Figure out which location needs to be updated
     uint32_t pixel_num   = y * w + x;
     uint32_t byte_offset = pixel_num / 8;
-    uint8_t  bit_offset  = pixel_num % 8;
+    uint8_t  bit_offset  = 7 - (pixel_num % 8);
     bool     curr_val    = (surface->u8buffer[byte_offset] & (1 << bit_offset)) ? true : false;
 
     // Skip messing with the dirty info if the original value already matches
